estimator = PassiveAggressiveClassifier / KNeighborsClassifier / DecisionTreeClassifier / AdaBoostClassifier / ExtraTreesClassifier / SVC / RandomForestClassifier / GradientBoostingClassifier / BernoulliNB / MultinomialNB / LogisticRegression / SGDClassifier
PassiveAggressiveClassifier = "PassiveAggressiveClassifier" op "C" eq C_passiveaggressiveclassifier cm "loss" eq loss_passiveaggressiveclassifier cm "fit_intercept" eq fit_intercept_passiveaggressiveclassifier cp
C_passiveaggressiveclassifier = "0.0001" / "0.001" / "100.0" / "1e-05" / "1e-06" / "0.01" / "10.0" / "50.0" / "0.1" / "0.5" / "1.0"
loss_passiveaggressiveclassifier = "\"hinge\"" / "\"squared_hinge\""
fit_intercept_passiveaggressiveclassifier = "False" / "True"
KNeighborsClassifier = "KNeighborsClassifier" op "n_neighbors" eq n_neighbors cm "weights" eq weights cp
n_neighbors = "100.0" / "10.0" / "11.0" / "12.0" / "13.0" / "14.0" / "15.0" / "16.0" / "17.0" / "18.0" / "19.0" / "20.0" / "21.0" / "22.0" / "23.0" / "24.0" / "25.0" / "50.0" / "1.0" / "2.0" / "3.0" / "4.0" / "5.0" / "6.0" / "7.0" / "8.0" / "9.0"
weights = "\"distance\"" / "\"uniform\""
DecisionTreeClassifier = "DecisionTreeClassifier" op "min_weight_fraction_leaf" eq min_weight_fraction_leaf cm "max_features" eq max_features cm "criterion" eq criterion cp
min_weight_fraction_leaf = "0.15000000000000002" / "0.30000000000000004" / "0.35000000000000003" / "0.05" / "0.25" / "0.45" / "0.0" / "0.1" / "0.2" / "0.4" / "0.5"
max_features = "\"None\"" / "\"log2\"" / "\"sqrt\"" / "0.25" / "0.75" / "0.1" / "0.5"
criterion = "\"entropy\"" / "\"gini\""
AdaBoostClassifier = "AdaBoostClassifier" op "learning_rate" eq learning_rate cm "n_estimators" eq n_estimators cp
learning_rate = "100.0" / "0.01" / "10.0" / "50.0" / "0.1" / "0.5" / "1.0"
n_estimators = "1000.0" / "100.0" / "500.0" / "10.0" / "50.0"
ExtraTreesClassifier = "ExtraTreesClassifier" op "n_estimators" eq n_estimators_extratreesclassifier cm "min_weight_fraction_leaf" eq min_weight_fraction_leaf_extratreesclassifier cm "max_features" eq max_features_extratreesclassifier cm "criterion" eq criterion_extratreesclassifier cp
n_estimators_extratreesclassifier = "1000.0" / "100.0" / "500.0" / "10.0" / "50.0"
min_weight_fraction_leaf_extratreesclassifier = "0.15000000000000002" / "0.30000000000000004" / "0.35000000000000003" / "0.05" / "0.25" / "0.45" / "0.0" / "0.1" / "0.2" / "0.4" / "0.5"
max_features_extratreesclassifier = "\"None\"" / "\"log2\"" / "\"sqrt\"" / "0.25" / "0.75" / "0.1" / "0.5"
criterion_extratreesclassifier = "\"entropy\"" / "\"gini\""
SVC = "SVC" op "C" eq C_svc cm "gamma" eq gamma cm "kernel" eq kernel cm "degree" eq degree cm "coef0" eq coef0 cp
C_svc = "100.0" / "0.01" / "10.0" / "50.0" / "0.1" / "0.5" / "1.0"
gamma = "\"auto\"" / "100.0" / "0.01" / "10.0" / "50.0" / "0.1" / "0.5" / "1.0"
kernel = "\"linear\"" / "\"poly\"" / "\"sigmoid\"" / "\"rbf\""
degree = "2.0" / "3.0"
coef0 = "100.0" / "10.0" / "50.0" / "0.0" / "0.1" / "0.5" / "1.0"
RandomForestClassifier = "RandomForestClassifier" op "n_estimators" eq n_estimators_randomforestclassifier cm "min_weight_fraction_leaf" eq min_weight_fraction_leaf_randomforestclassifier cm "max_features" eq max_features_randomforestclassifier cm "criterion" eq criterion_randomforestclassifier cp
n_estimators_randomforestclassifier = "1000.0" / "100.0" / "500.0" / "10.0" / "50.0"
min_weight_fraction_leaf_randomforestclassifier = "0.15000000000000002" / "0.30000000000000004" / "0.35000000000000003" / "0.05" / "0.25" / "0.45" / "0.0" / "0.1" / "0.2" / "0.4" / "0.5"
max_features_randomforestclassifier = "\"None\"" / "\"log2\"" / "\"sqrt\"" / "0.25" / "0.75" / "0.1" / "0.5"
criterion_randomforestclassifier = "\"entropy\"" / "\"gini\""
GradientBoostingClassifier = "GradientBoostingClassifier" op "loss" eq loss cm "learning_rate" eq learning_rate_gradientboostingclassifier cm "n_estimators" eq n_estimators_gradientboostingclassifier cm "max_depth" eq max_depth cm "max_features" eq max_features_gradientboostingclassifier cp
loss = "\"deviance\"" / "\"exponential\""
learning_rate_gradientboostingclassifier = "100.0" / "0.01" / "10.0" / "50.0" / "0.1" / "0.5" / "1.0"
n_estimators_gradientboostingclassifier = "1000.0" / "100.0" / "500.0" / "10.0" / "50.0"
max_depth = "\"None\"" / "10.0" / "20.0" / "50.0" / "1.0" / "2.0" / "3.0" / "4.0" / "5.0"
max_features_gradientboostingclassifier = "\"None\"" / "\"log2\"" / "\"sqrt\"" / "0.2" / "0.3" / "0.4" / "0.5" / "0.6" / "0.7" / "0.8" / "0.9"
BernoulliNB = "BernoulliNB" op "alpha" eq alpha cm "fit_prior" eq fit_prior cm "binarize" eq binarize cp
alpha = "0.25" / "0.75" / "10.0" / "25.0" / "50.0" / "0.0" / "0.1" / "0.5" / "1.0" / "5.0"
fit_prior = "False" / "True"
binarize = "0.25" / "0.75" / "0.0" / "0.1" / "0.5" / "0.9" / "1.0"
MultinomialNB = "MultinomialNB" op "alpha" eq alpha_multinomialnb cm "fit_prior" eq fit_prior_multinomialnb cp
alpha_multinomialnb = "0.25" / "0.75" / "10.0" / "25.0" / "50.0" / "0.0" / "0.1" / "0.5" / "1.0" / "5.0"
fit_prior_multinomialnb = "False" / "True"
LogisticRegression = "LogisticRegression" op "C" eq C cm "penalty" eq penalty cm "fit_intercept" eq fit_intercept cm "dual" eq dual cp
C = "10.0" / "10.5" / "11.0" / "11.5" / "12.0" / "12.5" / "13.0" / "13.5" / "14.0" / "14.5" / "15.0" / "15.5" / "16.0" / "16.5" / "17.0" / "17.5" / "18.0" / "18.5" / "19.0" / "19.5" / "20.0" / "0.5" / "1.0" / "1.5" / "2.0" / "2.5" / "3.0" / "3.5" / "4.0" / "4.5" / "5.0" / "5.5" / "6.0" / "6.5" / "7.0" / "7.5" / "8.0" / "8.5" / "9.0" / "9.5"
penalty = "\"l1\"" / "\"l2\""
fit_intercept = "False" / "True"
dual = "False" / "True"
SGDClassifier = "SGDClassifier" op "loss" eq loss_sgdclassifier cm "penalty" eq penalty_sgdclassifier cm "alpha" eq alpha_sgdclassifier cm "learning_rate" eq learning_rate_sgdclassifier cm "fit_intercept" eq fit_intercept_sgdclassifier cm "l1_ratio" eq l1_ratio cm "eta0" eq eta0 cm "power_t" eq power_t cp
loss_sgdclassifier = "\"hinge\"" / "\"modified_huber\"" / "\"perceptron\"" / "\"squared_hinge\"" / "\"log\""
penalty_sgdclassifier = "\"elasticnet\"" / "\"l1\"" / "\"l2\""
alpha_sgdclassifier = "0.0001" / "0.001" / "1e-05" / "1e-06" / "0.01"
learning_rate_sgdclassifier = "\"constant\"" / "\"invscaling\"" / "\"optimal\""
fit_intercept_sgdclassifier = "False" / "True"
l1_ratio = "0.15" / "0.25" / "0.75" / "0.0" / "0.1" / "0.5" / "0.9" / "1.0"
eta0 = "100.0" / "0.01" / "10.0" / "50.0" / "0.0" / "0.1" / "0.5" / "1.0"
power_t = "100.0" / "10.0" / "50.0" / "0.0" / "0.1" / "0.5" / "1.0"
eq = "="
op = "("
cp = ")"
cm = ","